[{"C:\\STUDY\\moonCalendar\\Front\\src\\components\\ContentEditor.js":"1","C:\\STUDY\\moonCalendar\\Front\\src\\pages\\NewDiary.js":"2","C:\\STUDY\\moonCalendar\\Front\\src\\pages\\List.js":"3","C:\\STUDY\\moonCalendar\\Front\\src\\pages\\FinDiary.js":"4","C:\\STUDY\\moonCalendar\\Front\\src\\components\\EditorContainer.js":"5","C:\\STUDY\\moonCalendar\\Front\\src\\pages\\Calendar.js":"6","C:\\STUDY\\moonCalendar\\Front\\src\\App.js":"7","C:\\STUDY\\moonCalendar\\Front\\src\\index.js":"8","C:\\STUDY\\moonCalendar\\Front\\src\\pages\\Feedback.js":"9","C:\\STUDY\\moonCalendar\\Front\\src\\pages\\Home.js":"10","C:\\STUDY\\moonCalendar\\Front\\src\\pages\\EditDiary.js":"11","C:\\STUDY\\moonCalendar\\Front\\src\\components\\MyButton.js":"12","C:\\STUDY\\moonCalendar\\Front\\src\\components\\MyFooter.js":"13","C:\\STUDY\\moonCalendar\\Front\\src\\components\\Line.js":"14","C:\\STUDY\\moonCalendar\\Front\\src\\components\\MyHeader.js":"15","C:\\STUDY\\moonCalendar\\Front\\src\\util\\useTheme.js":"16","C:\\STUDY\\moonCalendar\\Front\\src\\util\\weatherList.js":"17","C:\\STUDY\\moonCalendar\\Front\\src\\components\\WeatherItem.js":"18","C:\\STUDY\\moonCalendar\\Front\\src\\components\\EmptyPopup.js":"19"},{"size":3131,"mtime":1661229474657,"results":"20","hashOfConfig":"21"},{"size":381,"mtime":1661229474690,"results":"22","hashOfConfig":"21"},{"size":90,"mtime":1661229474689,"results":"23","hashOfConfig":"21"},{"size":5815,"mtime":1661229474686,"results":"24","hashOfConfig":"21"},{"size":7809,"mtime":1661229474657,"results":"25","hashOfConfig":"21"},{"size":4172,"mtime":1661229619991,"results":"26","hashOfConfig":"21"},{"size":3660,"mtime":1661253141197,"results":"27","hashOfConfig":"21"},{"size":297,"mtime":1661253095041,"results":"28","hashOfConfig":"21"},{"size":7337,"mtime":1661252547268,"results":"29","hashOfConfig":"21"},{"size":14053,"mtime":1661253029905,"results":"30","hashOfConfig":"21"},{"size":1066,"mtime":1661229474682,"results":"31","hashOfConfig":"21"},{"size":376,"mtime":1661229474657,"results":"32","hashOfConfig":"21"},{"size":514,"mtime":1661229474657,"results":"33","hashOfConfig":"21"},{"size":132,"mtime":1661229474657,"results":"34","hashOfConfig":"21"},{"size":2798,"mtime":1661229474668,"results":"35","hashOfConfig":"21"},{"size":790,"mtime":1661229474692,"results":"36","hashOfConfig":"21"},{"size":687,"mtime":1661229474692,"results":"37","hashOfConfig":"21"},{"size":427,"mtime":1661229474668,"results":"38","hashOfConfig":"21"},{"size":733,"mtime":1661229474657,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},"flgw1c",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"44"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"44"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"44"},"C:\\STUDY\\moonCalendar\\Front\\src\\components\\ContentEditor.js",["106","107","108","109","110","111","112","113","114"],[],"import React, { Component, useContext } from \"react\";\r\n/* components */\r\nimport MyHeader from \"./MyHeader\";\r\nimport {\r\n  EditorState,\r\n  convertToRaw,\r\n  ContentState,\r\n  convertFromRaw,\r\n  SelectionState,\r\n} from \"draft-js\";\r\nimport DraftPasteProcessor from \"draft-js/lib/DraftPasteProcessor\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { stateToHTML } from \"draft-js-export-html\";\r\nimport { stateFromHTML } from \"draft-js-import-html\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\nimport { DiaryDispatchContext } from \"../App\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction uploadImageCallBack(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\r\n    xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\r\n    const data = new FormData();\r\n    data.append(\"image\", file);\r\n    xhr.send(data);\r\n    xhr.addEventListener(\"load\", () => {\r\n      const response = JSON.parse(xhr.responseText);\r\n      resolve(response);\r\n    });\r\n    xhr.addEventListener(\"error\", () => {\r\n      const error = JSON.parse(xhr.responseText);\r\n      reject(error);\r\n    });\r\n  });\r\n}\r\n\r\nclass ContentEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let editorState;\r\n    if (!this.props.isEdit) {\r\n      editorState = EditorState.createEmpty();\r\n    } else {\r\n      const rawContentFromStore = convertFromRaw(\r\n        this.props.originData.contentRaw\r\n      );\r\n      editorState = EditorState.createWithContent(rawContentFromStore);\r\n    }\r\n    this.state = {\r\n      editorState: editorState,\r\n    };\r\n  }\r\n\r\n  onEditorStateChange(editorState) {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n\r\n    /* set new State */\r\n    const editingContent = stateToHTML(editorState.getCurrentContent());\r\n    this.props.setContent(editingContent);\r\n    const editingContentRaw = convertToRaw(editorState.getCurrentContent());\r\n    this.props.setContentRaw(editingContentRaw);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"EditorContainer\">\r\n        <div className=\"editor\">\r\n          <Editor\r\n            editorState={this.state.editorState}\r\n            onEditorStateChange={this.onEditorStateChange.bind(this)}\r\n            placeholder=\"content\"\r\n            toolbar={{\r\n              options: [\r\n                \"blockType\",\r\n                \"fontSize\",\r\n                \"inline\",\r\n                \"list\",\r\n                \"textAlign\",\r\n                \"history\",\r\n                \"image\",\r\n              ],\r\n              list: { inDropdown: true },\r\n              textAlign: { inDropdown: false },\r\n              link: { inDropdown: true },\r\n              history: { inDropdown: false },\r\n              image: {\r\n                uploadCallback: uploadImageCallBack,\r\n                alt: { present: true, mandatory: true },\r\n              },\r\n            }}\r\n            wrapperClassName=\"wrapper_class\"\r\n            editorClassName=\"editor_class\"\r\n            toolbarClassName=\"toolbar_class\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentEditor;\r\n",[],"C:\\STUDY\\moonCalendar\\Front\\src\\pages\\NewDiary.js",[],[],"C:\\STUDY\\moonCalendar\\Front\\src\\pages\\List.js",[],[],"C:\\STUDY\\moonCalendar\\Front\\src\\pages\\FinDiary.js",["115","116","117","118","119"],["120"],"import \"../css/FinDiary.css\";\r\nimport \".././css/WeatherItem.css\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { DiaryStateContext } from \"../App\";\r\n/* components */\r\nimport MyHeader from \".././components/MyHeader\";\r\nimport Line from \"../components/Line\";\r\nimport EditorDiary from \"../components/EditorContainer\";\r\n/* utils */\r\nimport { weatherList } from \"../util/weatherList\";\r\nimport { DiaryDispatchContext } from \".././App\";\r\n\r\nconst FinDiary = () => {\r\n  const { date } = useParams();\r\n  const diaryList = useContext(DiaryStateContext);\r\n  const { onRemove } = useContext(DiaryDispatchContext);\r\n  const navigate = useNavigate();\r\n\r\n  /* find target diary */\r\n  const [data, setData] = useState();\r\n  useEffect(() => {\r\n    if (diaryList.length >= 1) {\r\n      const targetDiary = diaryList.find((it) => it.date === date);\r\n\r\n      if (targetDiary) {\r\n        setData(targetDiary);\r\n      } else {\r\n        alert(\"없는 일기입니다.\");\r\n        navigate(\"/calendar\", { replace: true });\r\n      }\r\n    }\r\n  }, [data, diaryList]);\r\n\r\n  /* for scroll */\r\n  /* when scroll up -> show Header */\r\n  const [prevScrollPos, setPrevScrollPos] = useState(0);\r\n  const [isTopZero, setisTopZero] = useState(false);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const handleScroll = () => {\r\n    const currentScrollPos = window.pageYOffset;\r\n    setisTopZero(prevScrollPos <= currentScrollPos);\r\n    setPrevScrollPos(currentScrollPos);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, [prevScrollPos, isTopZero, handleScroll]);\r\n\r\n  //   /* icon */\r\n  //   const { theme } = useContext(MyHeader);\r\n  //   console.log(theme);\r\n  const themeMode = localStorage.getItem(\"theme\");\r\n  const calendarSrc =\r\n    process.env.PUBLIC_URL + `/assets/${themeMode}CalendarIcon.png`;\r\n  const personSrc =\r\n    process.env.PUBLIC_URL + `/assets/${themeMode}PersonIcon.png`;\r\n  const weatherSrc =\r\n    process.env.PUBLIC_URL + `/assets/${themeMode}WeatherIcon.png`;\r\n\r\n  if (!data) {\r\n    return <div className=\"DiaryPage\">로딩중입니다,,,</div>;\r\n  } else {\r\n    /* date */\r\n    const dateStr = data.date;\r\n    const [year, month, day] = dateStr.split(\"-\");\r\n\r\n    /* weather */\r\n    const curWeatherData = weatherList.find(\r\n      (it) => parseInt(it.weather_id) === parseInt(data.weather_id)\r\n    );\r\n\r\n    /* content */\r\n    const contentHTML = data.content;\r\n\r\n    /* Delete */\r\n    const handleRemove = () => {\r\n      if (window.confirm(\"정말 삭제하시겠습니까?\")) {\r\n        onRemove(data.date);\r\n        navigate(\"/calendar\", { replace: true });\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"FinDiary\">\r\n        <MyHeader\r\n          btn1Type=\"short\"\r\n          btn1Text=\"Edit\"\r\n          btn1Func={() => navigate(`/editDiary/${data.date}`)}\r\n          btn2Type=\"short red\"\r\n          btn2Text=\"Delete\"\r\n          btn2Func={handleRemove}\r\n        ></MyHeader>\r\n        <section\r\n          className={[\r\n            isTopZero ? \"background_scroll_down\" : \"background_scroll_up\",\r\n          ].join(\" \")}\r\n        >\r\n          <div className=\"main_wrapper\">\r\n            <div className=\"left_side\"></div>\r\n            <div className=\"edit_content\">\r\n              {/* title */}\r\n              <div className=\"input_title_wrapper\">\r\n                <div className=\"h1\">{data.title}</div>\r\n              </div>\r\n              <Line weight={1} eachClassName=\"div_line\"></Line>\r\n              <div className=\"diary_info\">\r\n                {/* date */}\r\n                <div className=\"date_wrapper\">\r\n                  <img src={calendarSrc} className=\"icon\" />\r\n                  <p className=\"body2\">Date : </p>\r\n                  <div className=\"info_short_ver body3\">\r\n                    <span className=\"body3\">{year}</span>\r\n                    <span className=\"body3\">년 </span>\r\n                    <span className=\"body3\">{month}</span>\r\n                    <span className=\"body3\">월 </span>\r\n                    <span className=\"body3\">{day}</span>\r\n                    <span className=\"body3\">일 </span>\r\n                  </div>\r\n                </div>\r\n                {/* who */}\r\n                <div className=\"who_wrapper\">\r\n                  <img src={personSrc} className=\"icon\" />\r\n                  <p className=\"body2\">Who : </p>\r\n                  <span className=\"body3\">{data.who}</span>\r\n                </div>\r\n                {/* weather */}\r\n                <div className=\"weather_wrapper\">\r\n                  <img src={weatherSrc} className=\"icon\" />\r\n                  <p className=\"body2\">Weather : </p>\r\n                  <div className=\"weather_icons_wrapper\">\r\n                    <div className=\"descript_wrapper\">\r\n                      <p className=\"body2\">{curWeatherData.weather_descript}</p>\r\n                    </div>\r\n                    <div className=\"img_wrapper\">\r\n                      <img src={curWeatherData.weather_img} alt=\"\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <Line weight={1} eachClassName=\"div_do ted_line\"></Line>\r\n              <div className=\"editor_wrapper\">\r\n                {/* eidtor */}\r\n                <div className=\"editor\">\r\n                  {/* Add Content */}\r\n                  <div\r\n                    className=\"content_wrapper\"\r\n                    dangerouslySetInnerHTML={{ __html: contentHTML }}\r\n                  ></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"right_side\"></div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default FinDiary;\r\n","C:\\STUDY\\moonCalendar\\Front\\src\\components\\EditorContainer.js",["121","122","123","124","125","126","127","128"],["129"],"import React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useContext,\r\n  useCallback,\r\n} from \"react\";\r\nimport { DiaryDispatchContext } from \"../App\";\r\n// import ReactDOM from \"react-dom\";\r\n/* components */\r\nimport { MyHeader } from \"./MyHeader\";\r\nimport MyFooter from \"./MyFooter\";\r\nimport Line from \"./Line\";\r\nimport WeatherItem from \"./WeatherItem\";\r\nimport ContentEditor from \"./ContentEditor\";\r\nimport EmptyPopup from \"./EmptyPopup\";\r\n/* util */\r\nimport useTheme from \"../util/useTheme\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport { weatherList } from \"../util/weatherList\";\r\n// import { EditorState } from \"draft-js\";\r\nimport \"draft-js/dist/Draft.css\";\r\n\r\nconst EditorContainer = ({ isEdit, originData }) => {\r\n  /* for scroll */\r\n  /* when scroll up -> show Header */\r\n  const [prevScrollPos, setPrevScrollPos] = useState(0);\r\n  const [isTopZero, setIsTopZero] = useState(false);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const handleScroll = () => {\r\n    const currentScrollPos = window.pageYOffset;\r\n    setIsTopZero(prevScrollPos <= currentScrollPos);\r\n    setPrevScrollPos(currentScrollPos);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, [prevScrollPos, isTopZero, handleScroll]);\r\n\r\n  const navigate = useNavigate();\r\n  //   /* icon */\r\n  //   const { theme } = useContext(MyHeader);\r\n  //   console.log(theme);\r\n  const themeMode = localStorage.getItem(\"theme\");\r\n  const calendarSrc =\r\n    process.env.PUBLIC_URL + `/assets/${themeMode}CalendarIcon.png`;\r\n  const personSrc =\r\n    process.env.PUBLIC_URL + `/assets/${themeMode}PersonIcon.png`;\r\n  const weatherSrc =\r\n    process.env.PUBLIC_URL + `/assets/${themeMode}WeatherIcon.png`;\r\n\r\n  /* title */\r\n  const titleRef = useRef();\r\n  const [title, setTitle] = useState(\"\");\r\n\r\n  /* date */\r\n  const [dateObj, setDate] = useState(useParams());\r\n  const { date } = useParams();\r\n  const [year, month, day] = dateObj.date.split(\"-\");\r\n\r\n  /* who */\r\n  const whoRef = useRef();\r\n  const [who, setWho] = useState(\"\");\r\n\r\n  /* weather */\r\n  const [weather_id, setWeather] = useState(1);\r\n  const handleRemote = useCallback((weather_id) => {\r\n    setWeather(weather_id);\r\n  }, []);\r\n\r\n  /* total content */\r\n  const contentRef = useRef();\r\n  const [content, setContent] = useState(\"\");\r\n  const [contentRaw, setContentRaw] = useState({});\r\n\r\n  /* Submit Button */\r\n  const { onCreate, onRemove, onEdit } = useContext(DiaryDispatchContext);\r\n  const [visibility, setVisibility] = useState(\"hidden\");\r\n  const [emptyCus, setEmptyCus] = useState(\"\");\r\n  const handleSubmit = () => {\r\n    if (title < 1) {\r\n      setEmptyCus(\"Title\");\r\n      setVisibility(\"visible\");\r\n      return;\r\n    }\r\n\r\n    if (content === \"<p><br></p>\") {\r\n      setEmptyCus(\"content\");\r\n      setVisibility(\"visible\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      window.confirm(\r\n        isEdit\r\n          ? \"수정을 완료하시겠습니까?\"\r\n          : \"새로운 일기 작성을 완료하시겠습니까?\"\r\n      )\r\n    ) {\r\n      if (!isEdit) {\r\n        onCreate(title, date, who, weather_id, content, contentRaw);\r\n        navigate(\"/calendar\", { replace: true });\r\n      } else {\r\n        console.log(\"EditorContainer\", content);\r\n        onEdit(title, date, who, weather_id, content, contentRaw);\r\n        navigate(`/finDiary/${date}`, { replace: true });\r\n      }\r\n    }\r\n  };\r\n\r\n  /* Cancel Button */\r\n  const handleCancel = () => {\r\n    if (\r\n      window.confirm(\r\n        \"취소하시면 작성 중인 내용이 저장되지 않을 수 있습니다.\\n취소하시겠습니까?\"\r\n      )\r\n    ) {\r\n      navigate(-1);\r\n    }\r\n  };\r\n\r\n  /* 수정 중이라면 기본 정보 셋업 */\r\n  useEffect(() => {\r\n    if (isEdit) {\r\n      setTitle(originData.title);\r\n      setWho(originData.who);\r\n      setWeather(originData.weather_id);\r\n      setContent(originData.content);\r\n    }\r\n  }, [isEdit, originData]);\r\n\r\n  return (\r\n    <div className=\"EditorContainer\">\r\n      <MyHeader\r\n        btn1Type=\"short\"\r\n        btn1Text=\"Submit\"\r\n        btn1Func={handleSubmit}\r\n        btn2Type=\"short red\"\r\n        btn2Text=\"Cancel\"\r\n        btn2Func={handleCancel}\r\n      />\r\n      <section\r\n        className={[\r\n          isTopZero ? \"background_scroll_down\" : \"background_scroll_up\",\r\n        ].join(\" \")}\r\n      >\r\n        <div className=\"main_wrapper\">\r\n          <div className=\"left_side\"></div>\r\n          <div className=\"edit_content\">\r\n            {/* title */}\r\n            <div className=\"input_title_wrapper\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"h1 input input_title\"\r\n                placeholder=\"Title\"\r\n                value={title}\r\n                ref={titleRef}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            </div>\r\n            <Line weight={1} eachClassName=\"div_line\"></Line>\r\n            <div className=\"diary_info\">\r\n              {/* date */}\r\n              <div className=\"date_wrapper\">\r\n                <img src={calendarSrc} className=\"icon\" />\r\n                <p className=\"body2\">Date : </p>\r\n                <div className=\"info_short_ver body3 start_date\">\r\n                  <span className=\"body3\">{year}</span>\r\n                  <span className=\"body3\">년 </span>\r\n                  <span className=\"body3\">{month}</span>\r\n                  <span className=\"body3\">월 </span>\r\n                  <span className=\"body3\">{day}</span>\r\n                  <span className=\"body3\">일 </span>\r\n                </div>\r\n              </div>\r\n              {/* who */}\r\n              <div className=\"who_wrapper\">\r\n                <img src={personSrc} className=\"icon\" />\r\n                <p className=\"body2\">Who : </p>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"info_short_ver body3 who\"\r\n                  placeholder=\"Name\"\r\n                  ref={whoRef}\r\n                  onChange={(e) => setWho(e.target.value)}\r\n                />\r\n              </div>\r\n              {/* weather */}\r\n              <div className=\"weather_wrapper\">\r\n                <img src={weatherSrc} className=\"icon\" />\r\n                <p className=\"body2\">Weather : </p>\r\n                <div className=\"weather_icons_wrapper\">\r\n                  {weatherList.map((it) => (\r\n                    <WeatherItem\r\n                      key={it.weather_id}\r\n                      {...it}\r\n                      onClick={handleRemote}\r\n                      isSelected={it.weather_id === weather_id}\r\n                    ></WeatherItem>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Line weight={1} eachClassName=\"div_do ted_line\"></Line>\r\n            <div className=\"editor_wrapper\">\r\n              {/* eidtor */}\r\n              <div className=\"editor\">\r\n                {/* Add Content */}\r\n                <ContentEditor\r\n                  isEdit={isEdit}\r\n                  content={content}\r\n                  setContent={setContent}\r\n                  contentRaw={contentRaw}\r\n                  setContentRaw={setContentRaw}\r\n                  originData={originData}\r\n                ></ContentEditor>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"right_side\"></div>\r\n        </div>\r\n        <div className=\"popup_wrapper\">\r\n          {visibility === \"visible\" ? (\r\n            <EmptyPopup\r\n              emptyCus={emptyCus}\r\n              visibility={visibility}\r\n              setVisibility={setVisibility}\r\n            ></EmptyPopup>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditorContainer;\r\n","C:\\STUDY\\moonCalendar\\Front\\src\\pages\\Calendar.js",["130","131","132","133","134","135","136"],[],"import \"../App.css\";\r\nimport React, {\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n  useMemo,\r\n  Component,\r\n} from \"react\";\r\n\r\n// cal modules\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\"; //기본 달력을 그리기 위한 플러그인 - 설치해야함!\r\nimport interactionPlugin from \"@fullcalendar/interaction\"; //이벤트,클릭,드래그 등의 기능을 이용하기 위한 플러그인\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport MyButton from \"../components/MyButton\";\r\nimport MyHeader from \"../components/MyHeader\";\r\nimport Line from \"../components/Line\";\r\n\r\nfunction Calendar() {\r\n  const [isOpenPopup, setisOpenPopup] = useState(false);\r\n  const [isOpen, setisOpen] = useState(false);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const toggle = () => {\r\n    setisOpenPopup(!isOpenPopup);\r\n  };\r\n  const click = () => {\r\n    setisOpen(!isOpen);\r\n  };\r\n  // 페이지 별 타이틀 수정하기\r\n  useEffect(() => {\r\n    const titleElem = document.getElementsByTagName(\"title\")[0];\r\n    titleElem.innerHTML = `calendar`;\r\n  }, []);\r\n  var thediv = document.getElementsByTagName(\"table\")[0];\r\n\r\n  /*var images = [\"/public/assets/calendar1.png\", \"/public/assets/calendar2.png\", \"/public/assets/calendar3.png\",\r\n \"/public/assets/calendar4.png\",\"/public/assets/calendar5.png\",\"/public/assets/calendar6.png\",\r\n \"/public/assets/calendar7.png\",\"/public/assets/calendar8.png\",\"/public/assets/calendar9.png\",\"/public/assets/calendar10.png\"]\r\n var num = images[Math.floor(Math.random() * images.length)];\r\n document.getElementsByTagName('table')[0].style.backgroundImage ='url(\"'+images[num] + '\")';\r\n*/\r\n  const navigate = useNavigate();\r\n  //const diaryList = useContext(DiaryStateContext);\r\n\r\n  //DiaryList에 일기가 존재하는지 아닌지 판별하는 함수\r\n  /*const isUnion = dateClickInfo => {\r\n    let isDif = true\r\n    FinDiary.forEach(it => {\r\n      if (it.date === dateClickInfo.dateStr) {\r\n        isDif = false\r\n      }\r\n    })\r\n    if (isDif) {\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }*/\r\n\r\n  return (\r\n    <div className=\"Calendar\">\r\n      <MyHeader\r\n        btn1Type=\"Feedback\"\r\n        btn1Text=\"Feedback\"\r\n        btn1Func={click}\r\n        btn2Type=\"sign\"\r\n        btn2Text=\"sign\"\r\n        btn2Func={toggle}\r\n      />\r\n\r\n      <section className=\"calendar\">\r\n        <button onClick={() => navigate(`/finDiary/2022-08-07`)}>\r\n          goDetail\r\n        </button>\r\n        <Line weight={5} style={{ margin: 20 }}></Line>\r\n        <Line weight={3} eachClassName={\"home_line\"}></Line>\r\n        <div className=\"start\">\r\n          <FullCalendar\r\n            className=\"fullcalendar\"\r\n            eventColor=\"white\"\r\n            plugins={[dayGridPlugin, interactionPlugin]}\r\n            initialView=\"dayGridMonth\"\r\n            editable=\"false\" //이벤트,드래그 등의 편집 기능 활용여부\r\n            top=\"130px \"\r\n            height=\"150vh\"\r\n            width=\"150vh\"\r\n            dayMaxEvents=\"1\"\r\n            dateClick={(dateClickInfo) => {\r\n              /* if (isUnion(dateClickInfo)) {\r\n                navigate(`./new/${dateClickInfo.dateStr}`)\r\n              }\r\n            }}*/\r\n              navigate(`/NewDiary/${dateClickInfo.dateStr}`);\r\n            }}\r\n            eventMouseEnter={(mouseEnterInfo) => {\r\n              mouseEnterInfo.el.style.cssText =\r\n                \"transform: scaleX(1.4) scaleY(1.2);\";\r\n              mouseEnterInfo.el.style.transition =\r\n                \"1s cubic-bezier(0, 0.83, 0.58, 1.25)\";\r\n            }}\r\n            eventMouseLeave={(mouseLeaveInfo) => {\r\n              mouseLeaveInfo.el.style.cssText = \"transform:scale(1.0);\";\r\n              mouseLeaveInfo.el.style.transition =\r\n                \"1s cubic-bezier(0, 0.83, 0.58, 1.25)\";\r\n            }}\r\n            //eventContent={renderEventContent} //이벤트 내용 커스텀\r\n            headerToolbar={{\r\n              //헤드 툴바\r\n              start: \"prev\",\r\n              center: \"title\",\r\n              end: `next`,\r\n            }}\r\n          />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","C:\\STUDY\\moonCalendar\\Front\\src\\App.js",[],[],"C:\\STUDY\\moonCalendar\\Front\\src\\index.js",[],[],"C:\\STUDY\\moonCalendar\\Front\\src\\pages\\Feedback.js",["137","138","139","140"],[],"C:\\STUDY\\moonCalendar\\Front\\src\\pages\\Home.js",[],["141"],"C:\\STUDY\\moonCalendar\\Front\\src\\pages\\EditDiary.js",["142"],[],"import { useEffect, useState, useContext } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport { DiaryStateContext } from \"../App\";\r\n/* components */\r\nimport EditorContainer from \"../components/EditorContainer\";\r\n\r\nconst EditDiary = () => {\r\n  const diaryList = useContext(DiaryStateContext);\r\n  const navigate = useNavigate();\r\n  const { date } = useParams();\r\n\r\n  /* find target diary */\r\n  const [originData, setOriginData] = useState();\r\n  useEffect(() => {\r\n    if (diaryList.length >= 1) {\r\n      const targetDiary = diaryList.find((it) => it.date === date);\r\n\r\n      if (targetDiary) {\r\n        setOriginData(targetDiary);\r\n      } else {\r\n        alert(\"없는 일기입니다.\");\r\n        navigate(\"/calendar\", { replace: true });\r\n      }\r\n    }\r\n  }, [originData, diaryList]);\r\n\r\n  return (\r\n    <div className=\"EditDiary\">\r\n      {originData && (\r\n        <EditorContainer\r\n          isEdit={true}\r\n          originData={originData}\r\n        ></EditorContainer>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditDiary;\r\n","C:\\STUDY\\moonCalendar\\Front\\src\\components\\MyButton.js",[],[],"C:\\STUDY\\moonCalendar\\Front\\src\\components\\MyFooter.js",[],[],"C:\\STUDY\\moonCalendar\\Front\\src\\components\\Line.js",[],[],"C:\\STUDY\\moonCalendar\\Front\\src\\components\\MyHeader.js",["143","144"],["145"],"/* components */\r\nimport MyButton from \"./MyButton\";\r\n/* toggle button ani */\r\nimport { motion } from \"framer-motion\";\r\n/* util */\r\nimport useTheme from \"../util/useTheme\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\nexport const MyHeader = ({\r\n  btn1Type,\r\n  btn1Text,\r\n  btn1Func,\r\n  btn2Type,\r\n  btn2Text,\r\n  btn2Func,\r\n}) => {\r\n  /* for Dark/Light Mode */\r\n  const [themeMode, toggleTheme] = useTheme();\r\n  const logoBtnSrc =\r\n    themeMode === \"light\"\r\n      ? process.env.PUBLIC_URL + \"/assets/lightLogo.png\"\r\n      : process.env.PUBLIC_URL + \"/assets/darkLogo.png\";\r\n  const themeBtnSrc =\r\n    themeMode === \"light\"\r\n      ? process.env.PUBLIC_URL + \"/assets/lightButton.png\"\r\n      : process.env.PUBLIC_URL + \"/assets/darkButton.png\";\r\n\r\n  /* for link pages */\r\n  const navigate = useNavigate();\r\n\r\n  /* for scroll */\r\n  /* when scroll up -> show Header */\r\n  const [prevScrollPos, setPrevScrollPos] = useState(0);\r\n  const [visible, setVisible] = useState(true);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const handleScroll = () => {\r\n    const currentScrollPos = window.pageYOffset;\r\n    setVisible(prevScrollPos > currentScrollPos);\r\n    setPrevScrollPos(currentScrollPos);\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => window.removeEventListener(\"scroll\", handleScroll);\r\n  }, [prevScrollPos, visible, handleScroll]);\r\n\r\n  return (\r\n    <header\r\n      className={[\"MyHeader\", visible ? \"scroll_up\" : \"scroll_down\"].join(\" \")}\r\n    >\r\n      <div className=\"MyHeader_wrapper\">\r\n        <div className=\"head_btn_left\">\r\n          <img\r\n            className=\"logo\"\r\n            src={logoBtnSrc}\r\n            onClick={() => navigate(\"/\")}\r\n          />\r\n        </div>\r\n        <div className=\"head_btn_right\">\r\n          <div className=\"head_btn_right1\">\r\n            <motion.img\r\n              src={themeBtnSrc}\r\n              className={[\"theme_btn\", `${themeMode}`].join(\" \")}\r\n              onClick={toggleTheme}\r\n              whileTap={{\r\n                opacity: 0,\r\n                rotate: 100,\r\n              }}\r\n              style={{ width: 40, height: 40 }}\r\n            />\r\n          </div>\r\n          <div className=\"head_btn_right2\">\r\n            <MyButton\r\n              className=\"button\"\r\n              type={btn1Type}\r\n              text={btn1Text}\r\n              onClick={btn1Func}\r\n            />\r\n          </div>\r\n          <div className=\"head_btn_right3\">\r\n            <MyButton\r\n              className=\"button\"\r\n              type={btn2Type}\r\n              text={btn2Text}\r\n              onClick={btn2Func}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MyHeader;","C:\\STUDY\\moonCalendar\\Front\\src\\util\\useTheme.js",[],[],"C:\\STUDY\\moonCalendar\\Front\\src\\util\\weatherList.js",[],[],"C:\\STUDY\\moonCalendar\\Front\\src\\components\\WeatherItem.js",["146"],[],"const WeatherItem = ({\r\n  weather_id,\r\n  weather_img,\r\n  weather_descript,\r\n  onClick,\r\n  isSelected,\r\n}) => {\r\n  return (\r\n    <div\r\n      className={[\r\n        \"WeatherItem\",\r\n        isSelected ? `WeatherItem_icon_on` : \"WeatherItem_icon_off\",\r\n      ].join(\" \")}\r\n      onClick={() => onClick(weather_id)}\r\n    >\r\n      <img src={weather_img} className=\"weather_icon\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherItem;","C:\\STUDY\\moonCalendar\\Front\\src\\components\\EmptyPopup.js",["147"],[],"import \"../css/NewDiary.css\";\r\nimport { useState } from \"react\";\r\nimport { AnimateSharedLayout, motion } from \"framer-motion\";\r\n\r\nconst EmptyPopup = ({ emptyCus, visibility, setVisibility }) => {\r\n  setTimeout(() => {\r\n    setVisibility(\"hidden\");\r\n  }, 2000);\r\n\r\n  return (\r\n    <AnimateSharedLayout>\r\n      <motion.div\r\n        initial={{ opacity: 0, scale: 0.7 }}\r\n        animate={{ opacity: 1, scale: 1 }}\r\n        transition={{ duration: 0.2 }}\r\n        className={[\"EmptyPopup\", `${visibility}`].join(\" \")}\r\n      >\r\n        <div className=\"text_wrapper\">\r\n          <div className=\"body1\">! {emptyCus} is Empty !</div>\r\n        </div>\r\n      </motion.div>\r\n    </AnimateSharedLayout>\r\n  );\r\n};\r\n\r\nexport default EmptyPopup;\r\n",{"ruleId":"148","severity":1,"message":"149","line":1,"column":28,"nodeType":"150","messageId":"151","endLine":1,"endColumn":38},{"ruleId":"148","severity":1,"message":"152","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":16},{"ruleId":"148","severity":1,"message":"153","line":7,"column":3,"nodeType":"150","messageId":"151","endLine":7,"endColumn":15},{"ruleId":"148","severity":1,"message":"154","line":9,"column":3,"nodeType":"150","messageId":"151","endLine":9,"endColumn":17},{"ruleId":"148","severity":1,"message":"155","line":11,"column":8,"nodeType":"150","messageId":"151","endLine":11,"endColumn":27},{"ruleId":"148","severity":1,"message":"156","line":14,"column":10,"nodeType":"150","messageId":"151","endLine":14,"endColumn":23},{"ruleId":"148","severity":1,"message":"157","line":15,"column":8,"nodeType":"150","messageId":"151","endLine":15,"endColumn":19},{"ruleId":"148","severity":1,"message":"158","line":16,"column":10,"nodeType":"150","messageId":"151","endLine":16,"endColumn":30},{"ruleId":"148","severity":1,"message":"159","line":17,"column":10,"nodeType":"150","messageId":"151","endLine":17,"endColumn":21},{"ruleId":"148","severity":1,"message":"160","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":33,"column":6,"nodeType":"163","endLine":33,"endColumn":23,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":111,"column":19,"nodeType":"167","endLine":111,"endColumn":61},{"ruleId":"165","severity":1,"message":"166","line":124,"column":19,"nodeType":"167","endLine":124,"endColumn":59},{"ruleId":"165","severity":1,"message":"166","line":130,"column":19,"nodeType":"167","endLine":130,"endColumn":60},{"ruleId":"161","severity":1,"message":"168","line":40,"column":9,"nodeType":"169","endLine":44,"endColumn":4,"suppressions":"170"},{"ruleId":"148","severity":1,"message":"171","line":12,"column":8,"nodeType":"150","messageId":"151","endLine":12,"endColumn":16},{"ruleId":"148","severity":1,"message":"172","line":18,"column":8,"nodeType":"150","messageId":"151","endLine":18,"endColumn":16},{"ruleId":"148","severity":1,"message":"173","line":59,"column":19,"nodeType":"150","messageId":"151","endLine":59,"endColumn":26},{"ruleId":"148","severity":1,"message":"174","line":74,"column":9,"nodeType":"150","messageId":"151","endLine":74,"endColumn":19},{"ruleId":"148","severity":1,"message":"175","line":79,"column":21,"nodeType":"150","messageId":"151","endLine":79,"endColumn":29},{"ruleId":"165","severity":1,"message":"166","line":167,"column":17,"nodeType":"167","endLine":167,"endColumn":59},{"ruleId":"165","severity":1,"message":"166","line":180,"column":17,"nodeType":"167","endLine":180,"endColumn":57},{"ruleId":"165","severity":1,"message":"166","line":192,"column":17,"nodeType":"167","endLine":192,"endColumn":58},{"ruleId":"161","severity":1,"message":"176","line":31,"column":9,"nodeType":"169","endLine":35,"endColumn":4,"suppressions":"177"},{"ruleId":"148","severity":1,"message":"149","line":3,"column":3,"nodeType":"150","messageId":"151","endLine":3,"endColumn":13},{"ruleId":"148","severity":1,"message":"178","line":6,"column":3,"nodeType":"150","messageId":"151","endLine":6,"endColumn":10},{"ruleId":"148","severity":1,"message":"179","line":7,"column":3,"nodeType":"150","messageId":"151","endLine":7,"endColumn":12},{"ruleId":"148","severity":1,"message":"180","line":16,"column":8,"nodeType":"150","messageId":"151","endLine":16,"endColumn":16},{"ruleId":"148","severity":1,"message":"181","line":23,"column":10,"nodeType":"150","messageId":"151","endLine":23,"endColumn":15},{"ruleId":"148","severity":1,"message":"182","line":23,"column":17,"nodeType":"150","messageId":"151","endLine":23,"endColumn":25},{"ruleId":"148","severity":1,"message":"183","line":36,"column":7,"nodeType":"150","messageId":"151","endLine":36,"endColumn":13},{"ruleId":"148","severity":1,"message":"184","line":5,"column":8,"nodeType":"150","messageId":"151","endLine":5,"endColumn":12},{"ruleId":"148","severity":1,"message":"185","line":15,"column":21,"nodeType":"150","messageId":"151","endLine":15,"endColumn":32},{"ruleId":"148","severity":1,"message":"186","line":21,"column":10,"nodeType":"150","messageId":"151","endLine":21,"endColumn":19},{"ruleId":"148","severity":1,"message":"187","line":21,"column":21,"nodeType":"150","messageId":"151","endLine":21,"endColumn":33},{"ruleId":"161","severity":1,"message":"188","line":17,"column":9,"nodeType":"169","endLine":21,"endColumn":4,"suppressions":"189"},{"ruleId":"161","severity":1,"message":"162","line":25,"column":6,"nodeType":"163","endLine":25,"endColumn":29,"suggestions":"190"},{"ruleId":"148","severity":1,"message":"191","line":8,"column":10,"nodeType":"150","messageId":"151","endLine":8,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":54,"column":11,"nodeType":"167","endLine":58,"endColumn":13},{"ruleId":"161","severity":1,"message":"192","line":37,"column":9,"nodeType":"169","endLine":41,"endColumn":4,"suppressions":"193"},{"ruleId":"165","severity":1,"message":"166","line":16,"column":7,"nodeType":"167","endLine":16,"endColumn":57},{"ruleId":"148","severity":1,"message":"194","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":18},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'MyHeader' is defined but never used.","'ContentState' is defined but never used.","'SelectionState' is defined but never used.","'DraftPasteProcessor' is defined but never used.","'stateFromHTML' is defined but never used.","'htmlToDraft' is defined but never used.","'DiaryDispatchContext' is defined but never used.","'useNavigate' is defined but never used.","'EditorDiary' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'date' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["195"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","The 'handleScroll' function makes the dependencies of useEffect Hook (at line 49) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleScroll' in its own useCallback() Hook.","VariableDeclarator",["196"],"'MyFooter' is defined but never used.","'useTheme' is defined but never used.","'setDate' is assigned a value but never used.","'contentRef' is assigned a value but never used.","'onRemove' is assigned a value but never used.","The 'handleScroll' function makes the dependencies of useEffect Hook (at line 40) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleScroll' in its own useCallback() Hook.",["197"],"'useMemo' is defined but never used.","'Component' is defined but never used.","'MyButton' is defined but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'thediv' is assigned a value but never used.","'Line' is defined but never used.","'toggleTheme' is assigned a value but never used.","'isWriting' is assigned a value but never used.","'setIsWriting' is assigned a value but never used.","The 'handleScroll' function makes the dependencies of useEffect Hook (at line 26) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleScroll' in its own useCallback() Hook.",["198"],["199"],"'Navigate' is defined but never used.","The 'handleScroll' function makes the dependencies of useEffect Hook (at line 46) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'handleScroll' in its own useCallback() Hook.",["200"],"'useState' is defined but never used.",{"desc":"201","fix":"202"},{"kind":"203","justification":"204"},{"kind":"203","justification":"204"},{"kind":"203","justification":"204"},{"desc":"205","fix":"206"},{"kind":"203","justification":"204"},"Update the dependencies array to be: [data, date, diaryList, navigate]",{"range":"207","text":"208"},"directive","","Update the dependencies array to be: [originData, diaryList, date, navigate]",{"range":"209","text":"210"},[1085,1102],"[data, date, diaryList, navigate]",[778,801],"[originData, diaryList, date, navigate]"]