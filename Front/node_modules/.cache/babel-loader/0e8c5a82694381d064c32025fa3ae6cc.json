{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport replaceTextWithMeta from './lib/replaceTextWithMeta';\nimport { CharacterMetadata, ContentBlock, ContentState, genKey } from 'draft-js';\nimport { List, Map, OrderedSet, Repeat, Seq } from 'immutable';\nimport { BLOCK_TYPE, ENTITY_TYPE, INLINE_STYLE } from 'draft-js-utils';\nimport { NODE_TYPE_ELEMENT, NODE_TYPE_TEXT } from 'synthetic-dom';\nimport { INLINE_ELEMENTS, SPECIAL_ELEMENTS, SELF_CLOSING_ELEMENTS } from './lib/Constants';\nvar DATA_URL = /^data:/i;\nvar NO_STYLE = OrderedSet();\nvar NO_ENTITY = null;\nvar EMPTY_BLOCK = new ContentBlock({\n  key: genKey(),\n  text: '',\n  type: BLOCK_TYPE.UNSTYLED,\n  characterList: List(),\n  depth: 0\n});\nvar LINE_BREAKS = /(\\r\\n|\\r|\\n)/g; // We use `\\r` because that character is always stripped from source (normalized\n// to `\\n`), so it's safe to assume it will only appear in the text content when\n// we put it there as a placeholder.\n\nvar SOFT_BREAK_PLACEHOLDER = '\\r';\nvar ZERO_WIDTH_SPACE = \"\\u200B\";\nvar DATA_ATTRIBUTE = /^data-([a-z0-9-]+)$/; // Map element attributes to entity data.\n\nvar ELEM_ATTR_MAP = {\n  a: {\n    href: 'url',\n    rel: 'rel',\n    target: 'target',\n    title: 'title'\n  },\n  img: {\n    src: 'src',\n    alt: 'alt',\n    width: 'width',\n    height: 'height'\n  }\n};\n\nvar getEntityData = function getEntityData(tagName, element) {\n  var data = {};\n\n  if (ELEM_ATTR_MAP.hasOwnProperty(tagName)) {\n    var attrMap = ELEM_ATTR_MAP[tagName];\n\n    for (var i = 0; i < element.attributes.length; i++) {\n      var _element$attributes$i = element.attributes[i],\n          name = _element$attributes$i.name,\n          value = _element$attributes$i.value;\n\n      if (typeof value === 'string') {\n        var strVal = value;\n\n        if (attrMap.hasOwnProperty(name)) {\n          var newName = attrMap[name];\n          data[newName] = strVal;\n        } else if (DATA_ATTRIBUTE.test(name)) {\n          data[name] = strVal;\n        }\n      }\n    }\n  }\n\n  return data;\n}; // Functions to create entities from elements.\n\n\nvar ElementToEntity = {\n  a: function a(generator, tagName, element) {\n    var data = getEntityData(tagName, element); // Don't add `<a>` elements with invalid href.\n\n    if (isAllowedHref(data.url)) {\n      return generator.createEntity(ENTITY_TYPE.LINK, data);\n    }\n  },\n  img: function img(generator, tagName, element) {\n    var data = getEntityData(tagName, element); // Don't add `<img>` elements with no src.\n\n    if (data.src != null) {\n      return generator.createEntity(ENTITY_TYPE.IMAGE, data);\n    }\n  }\n};\n\nvar ContentGenerator = /*#__PURE__*/function () {\n  // This will be passed to the customInlineFn to allow it\n  // to return a Style() or Entity().\n  function ContentGenerator() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ContentGenerator);\n\n    _defineProperty(this, \"contentStateForEntities\", void 0);\n\n    _defineProperty(this, \"blockStack\", void 0);\n\n    _defineProperty(this, \"blockList\", void 0);\n\n    _defineProperty(this, \"depth\", void 0);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"inlineCreators\", {\n      Style: function (_Style) {\n        function Style(_x) {\n          return _Style.apply(this, arguments);\n        }\n\n        Style.toString = function () {\n          return _Style.toString();\n        };\n\n        return Style;\n      }(function (style) {\n        return {\n          type: 'STYLE',\n          style: style\n        };\n      }),\n      Entity: function Entity(type, data) {\n        var mutability = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'MUTABLE';\n        return {\n          type: 'ENTITY',\n          entityKey: _this.createEntity(type, toStringMap(data), mutability)\n        };\n      }\n    });\n\n    this.options = options;\n    this.contentStateForEntities = ContentState.createFromBlockArray([]); // This represents the hierarchy as we traverse nested elements; for\n    // example [body, ul, li] where we must know li's parent type (ul or ol).\n\n    this.blockStack = []; // This is a linear list of blocks that will form the output; for example\n    // [p, li, li, blockquote].\n\n    this.blockList = [];\n    this.depth = 0;\n  }\n\n  _createClass(ContentGenerator, [{\n    key: \"process\",\n    value: function process(element) {\n      this.processBlockElement(element);\n      var contentBlocks = [];\n      this.blockList.forEach(function (block) {\n        var _concatFragments = concatFragments(block.textFragments),\n            text = _concatFragments.text,\n            characterMeta = _concatFragments.characterMeta;\n\n        var includeEmptyBlock = false; // If the block contains only a soft break then don't discard the block,\n        // but discard the soft break.\n\n        if (text === SOFT_BREAK_PLACEHOLDER) {\n          includeEmptyBlock = true;\n          text = '';\n        }\n\n        if (block.tagName === 'pre') {\n          var _trimLeadingNewline = trimLeadingNewline(text, characterMeta);\n\n          text = _trimLeadingNewline.text;\n          characterMeta = _trimLeadingNewline.characterMeta;\n        } else {\n          var _collapseWhiteSpace = collapseWhiteSpace(text, characterMeta);\n\n          text = _collapseWhiteSpace.text;\n          characterMeta = _collapseWhiteSpace.characterMeta;\n        } // Previously we were using a placeholder for soft breaks. Now that we\n        // have collapsed whitespace we can change it back to normal line breaks.\n\n\n        text = text.split(SOFT_BREAK_PLACEHOLDER).join('\\n'); // Discard empty blocks (unless otherwise specified).\n\n        if (text.length || includeEmptyBlock) {\n          contentBlocks.push(new ContentBlock({\n            key: genKey(),\n            text: text,\n            type: block.type,\n            characterList: characterMeta.toList(),\n            depth: block.depth,\n            data: block.data ? Map(block.data) : Map()\n          }));\n        }\n      });\n\n      if (!contentBlocks.length) {\n        contentBlocks = [EMPTY_BLOCK];\n      }\n\n      return ContentState.createFromBlockArray(contentBlocks, this.contentStateForEntities.getEntityMap());\n    }\n  }, {\n    key: \"getBlockTypeFromTagName\",\n    value: function getBlockTypeFromTagName(tagName) {\n      var blockTypes = this.options.blockTypes;\n\n      if (blockTypes && blockTypes[tagName]) {\n        return blockTypes[tagName];\n      }\n\n      switch (tagName) {\n        case 'li':\n          {\n            var parent = this.blockStack.slice(-1)[0];\n            return parent.tagName === 'ol' ? BLOCK_TYPE.ORDERED_LIST_ITEM : BLOCK_TYPE.UNORDERED_LIST_ITEM;\n          }\n\n        case 'blockquote':\n          {\n            return BLOCK_TYPE.BLOCKQUOTE;\n          }\n\n        case 'h1':\n          {\n            return BLOCK_TYPE.HEADER_ONE;\n          }\n\n        case 'h2':\n          {\n            return BLOCK_TYPE.HEADER_TWO;\n          }\n\n        case 'h3':\n          {\n            return BLOCK_TYPE.HEADER_THREE;\n          }\n\n        case 'h4':\n          {\n            return BLOCK_TYPE.HEADER_FOUR;\n          }\n\n        case 'h5':\n          {\n            return BLOCK_TYPE.HEADER_FIVE;\n          }\n\n        case 'h6':\n          {\n            return BLOCK_TYPE.HEADER_SIX;\n          }\n\n        case 'pre':\n          {\n            return BLOCK_TYPE.CODE;\n          }\n\n        case 'figure':\n          {\n            return BLOCK_TYPE.ATOMIC;\n          }\n\n        default:\n          {\n            return BLOCK_TYPE.UNSTYLED;\n          }\n      }\n    }\n  }, {\n    key: \"processBlockElement\",\n    value: function processBlockElement(element) {\n      if (!element) {\n        return;\n      }\n\n      var customBlockFn = this.options.customBlockFn;\n      var tagName = element.nodeName.toLowerCase();\n      var type;\n      var data;\n\n      if (customBlockFn) {\n        var customBlock = customBlockFn(element);\n\n        if (customBlock != null) {\n          type = customBlock.type;\n          data = customBlock.data;\n        }\n      }\n\n      var isCustomType = true;\n\n      if (type == null) {\n        isCustomType = false;\n        type = this.getBlockTypeFromTagName(tagName);\n      }\n\n      if (type === BLOCK_TYPE.CODE) {\n        var language = element.getAttribute('data-language');\n\n        if (language) {\n          data = _objectSpread({}, data, {\n            language: language\n          });\n        }\n      }\n\n      var hasDepth = canHaveDepth(type);\n      var allowRender = !SPECIAL_ELEMENTS.hasOwnProperty(tagName);\n\n      if (!isCustomType && !hasSemanticMeaning(type)) {\n        var parent = this.blockStack.slice(-1)[0];\n\n        if (parent) {\n          type = parent.type;\n        }\n      }\n\n      var block = {\n        tagName: tagName,\n        textFragments: [],\n        type: type,\n        styleStack: [NO_STYLE],\n        entityStack: [NO_ENTITY],\n        depth: hasDepth ? this.depth : 0,\n        data: data\n      };\n\n      if (allowRender) {\n        this.blockList.push(block);\n\n        if (hasDepth) {\n          this.depth += 1;\n        }\n      }\n\n      this.blockStack.push(block);\n\n      if (element.childNodes != null) {\n        Array.from(element.childNodes).forEach(this.processNode, this);\n      }\n\n      this.blockStack.pop();\n\n      if (allowRender && hasDepth) {\n        this.depth -= 1;\n      }\n    }\n  }, {\n    key: \"processInlineElement\",\n    value: function processInlineElement(element) {\n      var tagName = element.nodeName.toLowerCase();\n\n      if (tagName === 'br') {\n        this.processText(SOFT_BREAK_PLACEHOLDER);\n        return;\n      }\n\n      var block = this.blockStack.slice(-1)[0];\n      var style = block.styleStack.slice(-1)[0];\n      var entityKey = block.entityStack.slice(-1)[0];\n      var customInlineFn = this.options.customInlineFn;\n      var customInline = customInlineFn ? customInlineFn(element, this.inlineCreators) : null;\n\n      if (customInline != null) {\n        switch (customInline.type) {\n          case 'STYLE':\n            {\n              style = style.add(customInline.style);\n              break;\n            }\n\n          case 'ENTITY':\n            {\n              entityKey = customInline.entityKey;\n              break;\n            }\n        }\n      } else {\n        style = addStyleFromTagName(style, tagName, this.options.elementStyles);\n\n        if (ElementToEntity.hasOwnProperty(tagName)) {\n          // If the to-entity function returns nothing, use the existing entity.\n          entityKey = ElementToEntity[tagName](this, tagName, element) || entityKey;\n        }\n      }\n\n      block.styleStack.push(style);\n      block.entityStack.push(entityKey);\n\n      if (element.childNodes != null) {\n        Array.from(element.childNodes).forEach(this.processNode, this);\n      }\n\n      if (SELF_CLOSING_ELEMENTS.hasOwnProperty(tagName)) {\n        this.processText(\"\\xA0\");\n      }\n\n      block.entityStack.pop();\n      block.styleStack.pop();\n    }\n  }, {\n    key: \"processTextNode\",\n    value: function processTextNode(node) {\n      var text = node.nodeValue; // This is important because we will use \\r as a placeholder for a soft break.\n\n      text = text.replace(LINE_BREAKS, '\\n'); // Replace zero-width space (we use it as a placeholder in markdown) with a\n      // soft break.\n      // TODO: The import-markdown package should correctly turn breaks into <br>\n      // elements so we don't need to include this hack.\n\n      text = text.split(ZERO_WIDTH_SPACE).join(SOFT_BREAK_PLACEHOLDER);\n      this.processText(text);\n    }\n  }, {\n    key: \"processText\",\n    value: function processText(text) {\n      var block = this.blockStack.slice(-1)[0];\n      var style = block.styleStack.slice(-1)[0];\n      var entity = block.entityStack.slice(-1)[0];\n      var charMetadata = CharacterMetadata.create({\n        style: style,\n        entity: entity\n      });\n      var seq = Repeat(charMetadata, text.length);\n      block.textFragments.push({\n        text: text,\n        characterMeta: seq\n      });\n    }\n  }, {\n    key: \"processNode\",\n    value: function processNode(node) {\n      if (node.nodeType === NODE_TYPE_ELEMENT) {\n        // $FlowIssue\n        var _element = node;\n\n        var _tagName = _element.nodeName.toLowerCase();\n\n        if (INLINE_ELEMENTS.hasOwnProperty(_tagName)) {\n          this.processInlineElement(_element);\n        } else {\n          this.processBlockElement(_element);\n        }\n      } else if (node.nodeType === NODE_TYPE_TEXT) {\n        this.processTextNode(node);\n      }\n    }\n  }, {\n    key: \"createEntity\",\n    value: function createEntity(type, data) {\n      var mutability = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'MUTABLE';\n      this.contentStateForEntities = this.contentStateForEntities.createEntity(type, mutability, data);\n      return this.contentStateForEntities.getLastCreatedEntityKey();\n    }\n  }]);\n\n  return ContentGenerator;\n}();\n\nfunction trimLeadingNewline(text, characterMeta) {\n  if (text.charAt(0) === '\\n') {\n    text = text.slice(1);\n    characterMeta = characterMeta.slice(1);\n  }\n\n  return {\n    text: text,\n    characterMeta: characterMeta\n  };\n}\n\nfunction trimLeadingSpace(text, characterMeta) {\n  while (text.charAt(0) === ' ') {\n    text = text.slice(1);\n    characterMeta = characterMeta.slice(1);\n  }\n\n  return {\n    text: text,\n    characterMeta: characterMeta\n  };\n}\n\nfunction trimTrailingSpace(text, characterMeta) {\n  while (text.slice(-1) === ' ') {\n    text = text.slice(0, -1);\n    characterMeta = characterMeta.slice(0, -1);\n  }\n\n  return {\n    text: text,\n    characterMeta: characterMeta\n  };\n}\n\nfunction collapseWhiteSpace(text, characterMeta) {\n  text = text.replace(/[ \\t\\n]/g, ' ');\n\n  var _trimLeadingSpace = trimLeadingSpace(text, characterMeta);\n\n  text = _trimLeadingSpace.text;\n  characterMeta = _trimLeadingSpace.characterMeta;\n\n  var _trimTrailingSpace = trimTrailingSpace(text, characterMeta);\n\n  text = _trimTrailingSpace.text;\n  characterMeta = _trimTrailingSpace.characterMeta;\n  var i = text.length;\n\n  while (i--) {\n    if (text.charAt(i) === ' ' && text.charAt(i - 1) === ' ') {\n      text = text.slice(0, i) + text.slice(i + 1);\n      characterMeta = characterMeta.slice(0, i).concat(characterMeta.slice(i + 1));\n    }\n  } // There could still be one space on either side of a softbreak.\n\n\n  var _replaceTextWithMeta = replaceTextWithMeta({\n    text: text,\n    characterMeta: characterMeta\n  }, SOFT_BREAK_PLACEHOLDER + ' ', SOFT_BREAK_PLACEHOLDER);\n\n  text = _replaceTextWithMeta.text;\n  characterMeta = _replaceTextWithMeta.characterMeta;\n\n  var _replaceTextWithMeta2 = replaceTextWithMeta({\n    text: text,\n    characterMeta: characterMeta\n  }, ' ' + SOFT_BREAK_PLACEHOLDER, SOFT_BREAK_PLACEHOLDER);\n\n  text = _replaceTextWithMeta2.text;\n  characterMeta = _replaceTextWithMeta2.characterMeta;\n  return {\n    text: text,\n    characterMeta: characterMeta\n  };\n}\n\nfunction canHaveDepth(blockType) {\n  switch (blockType) {\n    case BLOCK_TYPE.UNORDERED_LIST_ITEM:\n    case BLOCK_TYPE.ORDERED_LIST_ITEM:\n      {\n        return true;\n      }\n\n    default:\n      {\n        return false;\n      }\n  }\n}\n\nfunction concatFragments(fragments) {\n  var text = '';\n  var characterMeta = Seq();\n  fragments.forEach(function (textFragment) {\n    text = text + textFragment.text;\n    characterMeta = characterMeta.concat(textFragment.characterMeta);\n  });\n  return {\n    text: text,\n    characterMeta: characterMeta\n  };\n}\n\nfunction addStyleFromTagName(styleSet, tagName, elementStyles) {\n  switch (tagName) {\n    case 'b':\n    case 'strong':\n      {\n        return styleSet.add(INLINE_STYLE.BOLD);\n      }\n\n    case 'i':\n    case 'em':\n      {\n        return styleSet.add(INLINE_STYLE.ITALIC);\n      }\n\n    case 'u':\n    case 'ins':\n      {\n        return styleSet.add(INLINE_STYLE.UNDERLINE);\n      }\n\n    case 'code':\n      {\n        return styleSet.add(INLINE_STYLE.CODE);\n      }\n\n    case 's':\n    case 'del':\n      {\n        return styleSet.add(INLINE_STYLE.STRIKETHROUGH);\n      }\n\n    default:\n      {\n        // Allow custom styles to be provided.\n        if (elementStyles && elementStyles[tagName]) {\n          return styleSet.add(elementStyles[tagName]);\n        }\n\n        return styleSet;\n      }\n  }\n}\n\nfunction hasSemanticMeaning(blockType) {\n  return blockType !== BLOCK_TYPE.UNSTYLED;\n}\n\nfunction toStringMap(input) {\n  var result = {};\n\n  if (input !== null && _typeof(input) === 'object' && !Array.isArray(input)) {\n    var obj = input;\n\n    for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n      var _key = _Object$keys[_i];\n      var value = obj[_key];\n\n      if (typeof value === 'string') {\n        result[_key] = value;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction isAllowedHref(input) {\n  if (input == null || input.match(DATA_URL)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport function stateFromElement(element, options) {\n  return new ContentGenerator(options).process(element);\n}\nexport default stateFromElement;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","push","apply","filter","sym","getOwnPropertyDescriptor","enumerable","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","value","replaceTextWithMeta","CharacterMetadata","ContentBlock","ContentState","genKey","List","Map","OrderedSet","Repeat","Seq","BLOCK_TYPE","ENTITY_TYPE","INLINE_STYLE","NODE_TYPE_ELEMENT","NODE_TYPE_TEXT","INLINE_ELEMENTS","SPECIAL_ELEMENTS","SELF_CLOSING_ELEMENTS","DATA_URL","NO_STYLE","NO_ENTITY","EMPTY_BLOCK","text","type","UNSTYLED","characterList","depth","LINE_BREAKS","SOFT_BREAK_PLACEHOLDER","ZERO_WIDTH_SPACE","DATA_ATTRIBUTE","ELEM_ATTR_MAP","a","href","rel","title","img","src","alt","width","height","getEntityData","tagName","element","data","hasOwnProperty","attrMap","attributes","_element$attributes$i","name","strVal","newName","test","ElementToEntity","generator","isAllowedHref","url","createEntity","LINK","IMAGE","ContentGenerator","_this","options","undefined","Style","_Style","_x","toString","style","Entity","mutability","entityKey","toStringMap","contentStateForEntities","createFromBlockArray","blockStack","blockList","process","processBlockElement","contentBlocks","block","_concatFragments","concatFragments","textFragments","characterMeta","includeEmptyBlock","_trimLeadingNewline","trimLeadingNewline","_collapseWhiteSpace","collapseWhiteSpace","split","join","toList","getEntityMap","getBlockTypeFromTagName","blockTypes","parent","slice","ORDERED_LIST_ITEM","UNORDERED_LIST_ITEM","BLOCKQUOTE","HEADER_ONE","HEADER_TWO","HEADER_THREE","HEADER_FOUR","HEADER_FIVE","HEADER_SIX","CODE","ATOMIC","customBlockFn","nodeName","toLowerCase","customBlock","isCustomType","language","getAttribute","hasDepth","canHaveDepth","allowRender","hasSemanticMeaning","styleStack","entityStack","childNodes","Array","from","processNode","pop","processInlineElement","processText","customInlineFn","customInline","inlineCreators","add","addStyleFromTagName","elementStyles","processTextNode","node","nodeValue","replace","entity","charMetadata","create","seq","nodeType","_element","_tagName","getLastCreatedEntityKey","charAt","trimLeadingSpace","trimTrailingSpace","_trimLeadingSpace","_trimTrailingSpace","concat","_replaceTextWithMeta","_replaceTextWithMeta2","blockType","fragments","textFragment","styleSet","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","input","result","isArray","_i","_Object$keys","_key","match","stateFromElement"],"sources":["C:/STUDY/moonCalendar/Front/node_modules/draft-js-import-element/esm/stateFromElement.js"],"sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { keys.push.apply(keys, Object.getOwnPropertySymbols(object)); } if (enumerableOnly) keys = keys.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport replaceTextWithMeta from './lib/replaceTextWithMeta';\nimport { CharacterMetadata, ContentBlock, ContentState, genKey } from 'draft-js';\nimport { List, Map, OrderedSet, Repeat, Seq } from 'immutable';\nimport { BLOCK_TYPE, ENTITY_TYPE, INLINE_STYLE } from 'draft-js-utils';\nimport { NODE_TYPE_ELEMENT, NODE_TYPE_TEXT } from 'synthetic-dom';\nimport { INLINE_ELEMENTS, SPECIAL_ELEMENTS, SELF_CLOSING_ELEMENTS } from './lib/Constants';\nvar DATA_URL = /^data:/i;\nvar NO_STYLE = OrderedSet();\nvar NO_ENTITY = null;\nvar EMPTY_BLOCK = new ContentBlock({\n  key: genKey(),\n  text: '',\n  type: BLOCK_TYPE.UNSTYLED,\n  characterList: List(),\n  depth: 0\n});\nvar LINE_BREAKS = /(\\r\\n|\\r|\\n)/g; // We use `\\r` because that character is always stripped from source (normalized\n// to `\\n`), so it's safe to assume it will only appear in the text content when\n// we put it there as a placeholder.\n\nvar SOFT_BREAK_PLACEHOLDER = '\\r';\nvar ZERO_WIDTH_SPACE = \"\\u200B\";\nvar DATA_ATTRIBUTE = /^data-([a-z0-9-]+)$/; // Map element attributes to entity data.\n\nvar ELEM_ATTR_MAP = {\n  a: {\n    href: 'url',\n    rel: 'rel',\n    target: 'target',\n    title: 'title'\n  },\n  img: {\n    src: 'src',\n    alt: 'alt',\n    width: 'width',\n    height: 'height'\n  }\n};\n\nvar getEntityData = function getEntityData(tagName, element) {\n  var data = {};\n\n  if (ELEM_ATTR_MAP.hasOwnProperty(tagName)) {\n    var attrMap = ELEM_ATTR_MAP[tagName];\n\n    for (var i = 0; i < element.attributes.length; i++) {\n      var _element$attributes$i = element.attributes[i],\n          name = _element$attributes$i.name,\n          value = _element$attributes$i.value;\n\n      if (typeof value === 'string') {\n        var strVal = value;\n\n        if (attrMap.hasOwnProperty(name)) {\n          var newName = attrMap[name];\n          data[newName] = strVal;\n        } else if (DATA_ATTRIBUTE.test(name)) {\n          data[name] = strVal;\n        }\n      }\n    }\n  }\n\n  return data;\n}; // Functions to create entities from elements.\n\n\nvar ElementToEntity = {\n  a: function a(generator, tagName, element) {\n    var data = getEntityData(tagName, element); // Don't add `<a>` elements with invalid href.\n\n    if (isAllowedHref(data.url)) {\n      return generator.createEntity(ENTITY_TYPE.LINK, data);\n    }\n  },\n  img: function img(generator, tagName, element) {\n    var data = getEntityData(tagName, element); // Don't add `<img>` elements with no src.\n\n    if (data.src != null) {\n      return generator.createEntity(ENTITY_TYPE.IMAGE, data);\n    }\n  }\n};\n\nvar ContentGenerator =\n/*#__PURE__*/\nfunction () {\n  // This will be passed to the customInlineFn to allow it\n  // to return a Style() or Entity().\n  function ContentGenerator() {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, ContentGenerator);\n\n    _defineProperty(this, \"contentStateForEntities\", void 0);\n\n    _defineProperty(this, \"blockStack\", void 0);\n\n    _defineProperty(this, \"blockList\", void 0);\n\n    _defineProperty(this, \"depth\", void 0);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"inlineCreators\", {\n      Style: function (_Style) {\n        function Style(_x) {\n          return _Style.apply(this, arguments);\n        }\n\n        Style.toString = function () {\n          return _Style.toString();\n        };\n\n        return Style;\n      }(function (style) {\n        return {\n          type: 'STYLE',\n          style: style\n        };\n      }),\n      Entity: function Entity(type, data) {\n        var mutability = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'MUTABLE';\n        return {\n          type: 'ENTITY',\n          entityKey: _this.createEntity(type, toStringMap(data), mutability)\n        };\n      }\n    });\n\n    this.options = options;\n    this.contentStateForEntities = ContentState.createFromBlockArray([]); // This represents the hierarchy as we traverse nested elements; for\n    // example [body, ul, li] where we must know li's parent type (ul or ol).\n\n    this.blockStack = []; // This is a linear list of blocks that will form the output; for example\n    // [p, li, li, blockquote].\n\n    this.blockList = [];\n    this.depth = 0;\n  }\n\n  _createClass(ContentGenerator, [{\n    key: \"process\",\n    value: function process(element) {\n      this.processBlockElement(element);\n      var contentBlocks = [];\n      this.blockList.forEach(function (block) {\n        var _concatFragments = concatFragments(block.textFragments),\n            text = _concatFragments.text,\n            characterMeta = _concatFragments.characterMeta;\n\n        var includeEmptyBlock = false; // If the block contains only a soft break then don't discard the block,\n        // but discard the soft break.\n\n        if (text === SOFT_BREAK_PLACEHOLDER) {\n          includeEmptyBlock = true;\n          text = '';\n        }\n\n        if (block.tagName === 'pre') {\n          var _trimLeadingNewline = trimLeadingNewline(text, characterMeta);\n\n          text = _trimLeadingNewline.text;\n          characterMeta = _trimLeadingNewline.characterMeta;\n        } else {\n          var _collapseWhiteSpace = collapseWhiteSpace(text, characterMeta);\n\n          text = _collapseWhiteSpace.text;\n          characterMeta = _collapseWhiteSpace.characterMeta;\n        } // Previously we were using a placeholder for soft breaks. Now that we\n        // have collapsed whitespace we can change it back to normal line breaks.\n\n\n        text = text.split(SOFT_BREAK_PLACEHOLDER).join('\\n'); // Discard empty blocks (unless otherwise specified).\n\n        if (text.length || includeEmptyBlock) {\n          contentBlocks.push(new ContentBlock({\n            key: genKey(),\n            text: text,\n            type: block.type,\n            characterList: characterMeta.toList(),\n            depth: block.depth,\n            data: block.data ? Map(block.data) : Map()\n          }));\n        }\n      });\n\n      if (!contentBlocks.length) {\n        contentBlocks = [EMPTY_BLOCK];\n      }\n\n      return ContentState.createFromBlockArray(contentBlocks, this.contentStateForEntities.getEntityMap());\n    }\n  }, {\n    key: \"getBlockTypeFromTagName\",\n    value: function getBlockTypeFromTagName(tagName) {\n      var blockTypes = this.options.blockTypes;\n\n      if (blockTypes && blockTypes[tagName]) {\n        return blockTypes[tagName];\n      }\n\n      switch (tagName) {\n        case 'li':\n          {\n            var parent = this.blockStack.slice(-1)[0];\n            return parent.tagName === 'ol' ? BLOCK_TYPE.ORDERED_LIST_ITEM : BLOCK_TYPE.UNORDERED_LIST_ITEM;\n          }\n\n        case 'blockquote':\n          {\n            return BLOCK_TYPE.BLOCKQUOTE;\n          }\n\n        case 'h1':\n          {\n            return BLOCK_TYPE.HEADER_ONE;\n          }\n\n        case 'h2':\n          {\n            return BLOCK_TYPE.HEADER_TWO;\n          }\n\n        case 'h3':\n          {\n            return BLOCK_TYPE.HEADER_THREE;\n          }\n\n        case 'h4':\n          {\n            return BLOCK_TYPE.HEADER_FOUR;\n          }\n\n        case 'h5':\n          {\n            return BLOCK_TYPE.HEADER_FIVE;\n          }\n\n        case 'h6':\n          {\n            return BLOCK_TYPE.HEADER_SIX;\n          }\n\n        case 'pre':\n          {\n            return BLOCK_TYPE.CODE;\n          }\n\n        case 'figure':\n          {\n            return BLOCK_TYPE.ATOMIC;\n          }\n\n        default:\n          {\n            return BLOCK_TYPE.UNSTYLED;\n          }\n      }\n    }\n  }, {\n    key: \"processBlockElement\",\n    value: function processBlockElement(element) {\n      if (!element) {\n        return;\n      }\n\n      var customBlockFn = this.options.customBlockFn;\n      var tagName = element.nodeName.toLowerCase();\n      var type;\n      var data;\n\n      if (customBlockFn) {\n        var customBlock = customBlockFn(element);\n\n        if (customBlock != null) {\n          type = customBlock.type;\n          data = customBlock.data;\n        }\n      }\n\n      var isCustomType = true;\n\n      if (type == null) {\n        isCustomType = false;\n        type = this.getBlockTypeFromTagName(tagName);\n      }\n\n      if (type === BLOCK_TYPE.CODE) {\n        var language = element.getAttribute('data-language');\n\n        if (language) {\n          data = _objectSpread({}, data, {\n            language: language\n          });\n        }\n      }\n\n      var hasDepth = canHaveDepth(type);\n      var allowRender = !SPECIAL_ELEMENTS.hasOwnProperty(tagName);\n\n      if (!isCustomType && !hasSemanticMeaning(type)) {\n        var parent = this.blockStack.slice(-1)[0];\n\n        if (parent) {\n          type = parent.type;\n        }\n      }\n\n      var block = {\n        tagName: tagName,\n        textFragments: [],\n        type: type,\n        styleStack: [NO_STYLE],\n        entityStack: [NO_ENTITY],\n        depth: hasDepth ? this.depth : 0,\n        data: data\n      };\n\n      if (allowRender) {\n        this.blockList.push(block);\n\n        if (hasDepth) {\n          this.depth += 1;\n        }\n      }\n\n      this.blockStack.push(block);\n\n      if (element.childNodes != null) {\n        Array.from(element.childNodes).forEach(this.processNode, this);\n      }\n\n      this.blockStack.pop();\n\n      if (allowRender && hasDepth) {\n        this.depth -= 1;\n      }\n    }\n  }, {\n    key: \"processInlineElement\",\n    value: function processInlineElement(element) {\n      var tagName = element.nodeName.toLowerCase();\n\n      if (tagName === 'br') {\n        this.processText(SOFT_BREAK_PLACEHOLDER);\n        return;\n      }\n\n      var block = this.blockStack.slice(-1)[0];\n      var style = block.styleStack.slice(-1)[0];\n      var entityKey = block.entityStack.slice(-1)[0];\n      var customInlineFn = this.options.customInlineFn;\n      var customInline = customInlineFn ? customInlineFn(element, this.inlineCreators) : null;\n\n      if (customInline != null) {\n        switch (customInline.type) {\n          case 'STYLE':\n            {\n              style = style.add(customInline.style);\n              break;\n            }\n\n          case 'ENTITY':\n            {\n              entityKey = customInline.entityKey;\n              break;\n            }\n        }\n      } else {\n        style = addStyleFromTagName(style, tagName, this.options.elementStyles);\n\n        if (ElementToEntity.hasOwnProperty(tagName)) {\n          // If the to-entity function returns nothing, use the existing entity.\n          entityKey = ElementToEntity[tagName](this, tagName, element) || entityKey;\n        }\n      }\n\n      block.styleStack.push(style);\n      block.entityStack.push(entityKey);\n\n      if (element.childNodes != null) {\n        Array.from(element.childNodes).forEach(this.processNode, this);\n      }\n\n      if (SELF_CLOSING_ELEMENTS.hasOwnProperty(tagName)) {\n        this.processText(\"\\xA0\");\n      }\n\n      block.entityStack.pop();\n      block.styleStack.pop();\n    }\n  }, {\n    key: \"processTextNode\",\n    value: function processTextNode(node) {\n      var text = node.nodeValue; // This is important because we will use \\r as a placeholder for a soft break.\n\n      text = text.replace(LINE_BREAKS, '\\n'); // Replace zero-width space (we use it as a placeholder in markdown) with a\n      // soft break.\n      // TODO: The import-markdown package should correctly turn breaks into <br>\n      // elements so we don't need to include this hack.\n\n      text = text.split(ZERO_WIDTH_SPACE).join(SOFT_BREAK_PLACEHOLDER);\n      this.processText(text);\n    }\n  }, {\n    key: \"processText\",\n    value: function processText(text) {\n      var block = this.blockStack.slice(-1)[0];\n      var style = block.styleStack.slice(-1)[0];\n      var entity = block.entityStack.slice(-1)[0];\n      var charMetadata = CharacterMetadata.create({\n        style: style,\n        entity: entity\n      });\n      var seq = Repeat(charMetadata, text.length);\n      block.textFragments.push({\n        text: text,\n        characterMeta: seq\n      });\n    }\n  }, {\n    key: \"processNode\",\n    value: function processNode(node) {\n      if (node.nodeType === NODE_TYPE_ELEMENT) {\n        // $FlowIssue\n        var _element = node;\n\n        var _tagName = _element.nodeName.toLowerCase();\n\n        if (INLINE_ELEMENTS.hasOwnProperty(_tagName)) {\n          this.processInlineElement(_element);\n        } else {\n          this.processBlockElement(_element);\n        }\n      } else if (node.nodeType === NODE_TYPE_TEXT) {\n        this.processTextNode(node);\n      }\n    }\n  }, {\n    key: \"createEntity\",\n    value: function createEntity(type, data) {\n      var mutability = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'MUTABLE';\n      this.contentStateForEntities = this.contentStateForEntities.createEntity(type, mutability, data);\n      return this.contentStateForEntities.getLastCreatedEntityKey();\n    }\n  }]);\n\n  return ContentGenerator;\n}();\n\nfunction trimLeadingNewline(text, characterMeta) {\n  if (text.charAt(0) === '\\n') {\n    text = text.slice(1);\n    characterMeta = characterMeta.slice(1);\n  }\n\n  return {\n    text: text,\n    characterMeta: characterMeta\n  };\n}\n\nfunction trimLeadingSpace(text, characterMeta) {\n  while (text.charAt(0) === ' ') {\n    text = text.slice(1);\n    characterMeta = characterMeta.slice(1);\n  }\n\n  return {\n    text: text,\n    characterMeta: characterMeta\n  };\n}\n\nfunction trimTrailingSpace(text, characterMeta) {\n  while (text.slice(-1) === ' ') {\n    text = text.slice(0, -1);\n    characterMeta = characterMeta.slice(0, -1);\n  }\n\n  return {\n    text: text,\n    characterMeta: characterMeta\n  };\n}\n\nfunction collapseWhiteSpace(text, characterMeta) {\n  text = text.replace(/[ \\t\\n]/g, ' ');\n\n  var _trimLeadingSpace = trimLeadingSpace(text, characterMeta);\n\n  text = _trimLeadingSpace.text;\n  characterMeta = _trimLeadingSpace.characterMeta;\n\n  var _trimTrailingSpace = trimTrailingSpace(text, characterMeta);\n\n  text = _trimTrailingSpace.text;\n  characterMeta = _trimTrailingSpace.characterMeta;\n  var i = text.length;\n\n  while (i--) {\n    if (text.charAt(i) === ' ' && text.charAt(i - 1) === ' ') {\n      text = text.slice(0, i) + text.slice(i + 1);\n      characterMeta = characterMeta.slice(0, i).concat(characterMeta.slice(i + 1));\n    }\n  } // There could still be one space on either side of a softbreak.\n\n\n  var _replaceTextWithMeta = replaceTextWithMeta({\n    text: text,\n    characterMeta: characterMeta\n  }, SOFT_BREAK_PLACEHOLDER + ' ', SOFT_BREAK_PLACEHOLDER);\n\n  text = _replaceTextWithMeta.text;\n  characterMeta = _replaceTextWithMeta.characterMeta;\n\n  var _replaceTextWithMeta2 = replaceTextWithMeta({\n    text: text,\n    characterMeta: characterMeta\n  }, ' ' + SOFT_BREAK_PLACEHOLDER, SOFT_BREAK_PLACEHOLDER);\n\n  text = _replaceTextWithMeta2.text;\n  characterMeta = _replaceTextWithMeta2.characterMeta;\n  return {\n    text: text,\n    characterMeta: characterMeta\n  };\n}\n\nfunction canHaveDepth(blockType) {\n  switch (blockType) {\n    case BLOCK_TYPE.UNORDERED_LIST_ITEM:\n    case BLOCK_TYPE.ORDERED_LIST_ITEM:\n      {\n        return true;\n      }\n\n    default:\n      {\n        return false;\n      }\n  }\n}\n\nfunction concatFragments(fragments) {\n  var text = '';\n  var characterMeta = Seq();\n  fragments.forEach(function (textFragment) {\n    text = text + textFragment.text;\n    characterMeta = characterMeta.concat(textFragment.characterMeta);\n  });\n  return {\n    text: text,\n    characterMeta: characterMeta\n  };\n}\n\nfunction addStyleFromTagName(styleSet, tagName, elementStyles) {\n  switch (tagName) {\n    case 'b':\n    case 'strong':\n      {\n        return styleSet.add(INLINE_STYLE.BOLD);\n      }\n\n    case 'i':\n    case 'em':\n      {\n        return styleSet.add(INLINE_STYLE.ITALIC);\n      }\n\n    case 'u':\n    case 'ins':\n      {\n        return styleSet.add(INLINE_STYLE.UNDERLINE);\n      }\n\n    case 'code':\n      {\n        return styleSet.add(INLINE_STYLE.CODE);\n      }\n\n    case 's':\n    case 'del':\n      {\n        return styleSet.add(INLINE_STYLE.STRIKETHROUGH);\n      }\n\n    default:\n      {\n        // Allow custom styles to be provided.\n        if (elementStyles && elementStyles[tagName]) {\n          return styleSet.add(elementStyles[tagName]);\n        }\n\n        return styleSet;\n      }\n  }\n}\n\nfunction hasSemanticMeaning(blockType) {\n  return blockType !== BLOCK_TYPE.UNSTYLED;\n}\n\nfunction toStringMap(input) {\n  var result = {};\n\n  if (input !== null && _typeof(input) === 'object' && !Array.isArray(input)) {\n    var obj = input;\n\n    for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n      var _key = _Object$keys[_i];\n      var value = obj[_key];\n\n      if (typeof value === 'string') {\n        result[_key] = value;\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction isAllowedHref(input) {\n  if (input == null || input.match(DATA_URL)) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nexport function stateFromElement(element, options) {\n  return new ContentGenerator(options).process(element);\n}\nexport default stateFromElement;"],"mappings":"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"},"metadata":{},"sourceType":"module"}