{"ast":null,"code":"var _jsxFileName = \"C:\\\\STUDY\\\\moonCalendar\\\\Front\\\\src\\\\components\\\\ContentEditor.js\";\nimport React, { Component, useContext } from \"react\";\n/* components */\n\nimport MyHeader from \"./MyHeader\";\nimport { EditorState, convertToRaw, ContentState, convertFromRaw, SelectionState } from \"draft-js\";\nimport DraftPasteProcessor from \"draft-js/lib/DraftPasteProcessor\";\nimport { Editor } from \"react-draft-wysiwyg\";\nimport { stateToHTML } from \"draft-js-export-html\";\nimport { stateFromHTML } from \"draft-js-import-html\";\nimport htmlToDraft from \"html-to-draftjs\";\nimport { DiaryDispatchContext } from \"../App\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction uploadImageCallBack(file) {\n  return new Promise((resolve, reject) => {\n    const xhr = new XMLHttpRequest();\n    xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\n    xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\n    const data = new FormData();\n    data.append(\"image\", file);\n    xhr.send(data);\n    xhr.addEventListener(\"load\", () => {\n      const response = JSON.parse(xhr.responseText);\n      resolve(response);\n    });\n    xhr.addEventListener(\"error\", () => {\n      const error = JSON.parse(xhr.responseText);\n      reject(error);\n    });\n  });\n}\n\nclass ContentEditor extends Component {\n  constructor(props) {\n    super(props); // 작동은 하지만 처음에 edit을 누르면 기존 텍스트가 나오지 않음\n\n    let editorState;\n    console.log(this.props.isEdit);\n\n    if (!this.props.isEdit) {\n      // this.state = {\n      editorState = EditorState.createEmpty(); // };\n    } else {\n      const rawContentFromStore = convertFromRaw(this.props.originData.contentRaw);\n      editorState = EditorState.createWithContent(rawContentFromStore);\n    }\n\n    this.state = {\n      editorState: editorState\n    };\n  }\n\n  onEditorStateChange(editorState) {\n    // console.log(editorState)\n    // 1\n    //   const { editorState } = this.state;\n    //   this.onChange(\n    //     EditorState.push(editorState, stateFromHTML(this.state.convertedContent))\n    //   );\n    // if (this.props.isEdit) {\n    //   this.setState({\n    //     editorState: stateFromHTML(this.props.content),\n    //   });\n    // } else {\n    // this.setState({\n    //   editorState,\n    // });\n    // }\n    // const contentState = stateToHTML(\n    //   this.state.editorState.getCurrentContent()\n    // );\n    // console.log(\"contentState\", contentState);\n    // this.props.setContent(contentState);\n    // 5\n    // const contentState = convertFromRaw(this.props.content);\n    // const newEditorState = EditorState.push(\n    //   this.state.editorState,\n    //   contentState\n    // );\n    // this.setState({ editorState: newEditorState });\n    this.setState({\n      editorState\n    }); // 2\n    // const editingContent = stateToHTML(editorState.getCurrentContent());\n\n    const editingContent = stateToHTML(editorState.getCurrentContent());\n    this.props.setContent(editingContent);\n    const editingContentRaw = convertToRaw(editorState.getCurrentContent());\n    this.props.setContentRaw(editingContentRaw); //3\n  }\n\n  render() {\n    // const { editorState } = this.state;\n    // let contentState = stateToHTML(this.state.editorState.getCurrentContent());\n    // this.props.setContent(contentState);\n    // const currentBlockKey = this.state.editorState.getSelection().getStartKey();\n    // const currentBlockIndex = this.state.editorState\n    //   .getCurrentContent()\n    //   .getBlockMap()\n    //   .keySeq()\n    //   .findIndex((k) => k === currentBlockKey);\n    // console.log(currentBlockIndex);\n    console.log(\"2. ContentEditor\", this.props.content);\n    console.log(\"3\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"EditorContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor\",\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          editorState: this.state.editorState,\n          onEditorStateChange: this.onEditorStateChange.bind(this),\n          placeholder: \"content\",\n          toolbar: {\n            options: [\"blockType\", \"fontSize\", \"inline\", \"list\", \"textAlign\", \"history\", \"image\"],\n            list: {\n              inDropdown: true\n            },\n            textAlign: {\n              inDropdown: false\n            },\n            link: {\n              inDropdown: true\n            },\n            history: {\n              inDropdown: false\n            },\n            image: {\n              uploadCallback: uploadImageCallBack,\n              alt: {\n                present: true,\n                mandatory: true\n              }\n            }\n          },\n          wrapperClassName: \"wrapper_class\",\n          editorClassName: \"editor_class\",\n          toolbarClassName: \"toolbar_class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ContentEditor;","map":{"version":3,"names":["React","Component","useContext","MyHeader","EditorState","convertToRaw","ContentState","convertFromRaw","SelectionState","DraftPasteProcessor","Editor","stateToHTML","stateFromHTML","htmlToDraft","DiaryDispatchContext","useNavigate","uploadImageCallBack","file","Promise","resolve","reject","xhr","XMLHttpRequest","open","setRequestHeader","data","FormData","append","send","addEventListener","response","JSON","parse","responseText","error","ContentEditor","constructor","props","editorState","console","log","isEdit","createEmpty","rawContentFromStore","originData","contentRaw","createWithContent","state","onEditorStateChange","setState","editingContent","getCurrentContent","setContent","editingContentRaw","setContentRaw","render","content","bind","options","list","inDropdown","textAlign","link","history","image","uploadCallback","alt","present","mandatory"],"sources":["C:/STUDY/moonCalendar/Front/src/components/ContentEditor.js"],"sourcesContent":["import React, { Component, useContext } from \"react\";\r\n/* components */\r\nimport MyHeader from \"./MyHeader\";\r\nimport {\r\n  EditorState,\r\n  convertToRaw,\r\n  ContentState,\r\n  convertFromRaw,\r\n  SelectionState,\r\n} from \"draft-js\";\r\nimport DraftPasteProcessor from \"draft-js/lib/DraftPasteProcessor\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport { stateToHTML } from \"draft-js-export-html\";\r\nimport { stateFromHTML } from \"draft-js-import-html\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\nimport { DiaryDispatchContext } from \"../App\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction uploadImageCallBack(file) {\r\n  return new Promise((resolve, reject) => {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open(\"POST\", \"https://api.imgur.com/3/image\");\r\n    xhr.setRequestHeader(\"Authorization\", \"Client-ID XXXXX\");\r\n    const data = new FormData();\r\n    data.append(\"image\", file);\r\n    xhr.send(data);\r\n    xhr.addEventListener(\"load\", () => {\r\n      const response = JSON.parse(xhr.responseText);\r\n      resolve(response);\r\n    });\r\n    xhr.addEventListener(\"error\", () => {\r\n      const error = JSON.parse(xhr.responseText);\r\n      reject(error);\r\n    });\r\n  });\r\n}\r\n\r\nclass ContentEditor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // 작동은 하지만 처음에 edit을 누르면 기존 텍스트가 나오지 않음\r\n    let editorState;\r\n    console.log(this.props.isEdit);\r\n    if (!this.props.isEdit) {\r\n      // this.state = {\r\n      editorState = EditorState.createEmpty();\r\n      // };\r\n    } else {\r\n      const rawContentFromStore = convertFromRaw(\r\n        this.props.originData.contentRaw\r\n      );\r\n      editorState = EditorState.createWithContent(rawContentFromStore);\r\n    }\r\n    this.state = {\r\n      editorState: editorState,\r\n    };\r\n  }\r\n\r\n  onEditorStateChange(editorState) {\r\n    // console.log(editorState)\r\n    // 1\r\n    //   const { editorState } = this.state;\r\n    //   this.onChange(\r\n    //     EditorState.push(editorState, stateFromHTML(this.state.convertedContent))\r\n    //   );\r\n    // if (this.props.isEdit) {\r\n    //   this.setState({\r\n    //     editorState: stateFromHTML(this.props.content),\r\n    //   });\r\n    // } else {\r\n    // this.setState({\r\n    //   editorState,\r\n    // });\r\n    // }\r\n\r\n    // const contentState = stateToHTML(\r\n    //   this.state.editorState.getCurrentContent()\r\n    // );\r\n    // console.log(\"contentState\", contentState);\r\n    // this.props.setContent(contentState);\r\n    // 5\r\n    // const contentState = convertFromRaw(this.props.content);\r\n    // const newEditorState = EditorState.push(\r\n    //   this.state.editorState,\r\n    //   contentState\r\n    // );\r\n    // this.setState({ editorState: newEditorState });\r\n    this.setState({\r\n      editorState,\r\n    });\r\n    // 2\r\n    // const editingContent = stateToHTML(editorState.getCurrentContent());\r\n    const editingContent = stateToHTML(editorState.getCurrentContent());\r\n    this.props.setContent(editingContent);\r\n    const editingContentRaw = convertToRaw(editorState.getCurrentContent());\r\n    this.props.setContentRaw(editingContentRaw);\r\n    //3\r\n  }\r\n\r\n  render() {\r\n    // const { editorState } = this.state;\r\n\r\n    // let contentState = stateToHTML(this.state.editorState.getCurrentContent());\r\n    // this.props.setContent(contentState);\r\n\r\n    // const currentBlockKey = this.state.editorState.getSelection().getStartKey();\r\n    // const currentBlockIndex = this.state.editorState\r\n    //   .getCurrentContent()\r\n    //   .getBlockMap()\r\n    //   .keySeq()\r\n    //   .findIndex((k) => k === currentBlockKey);\r\n    // console.log(currentBlockIndex);\r\n\r\n    console.log(\"2. ContentEditor\", this.props.content);\r\n    console.log(\"3\");\r\n    return (\r\n      <div className=\"EditorContainer\">\r\n        <div className=\"editor\">\r\n          <Editor\r\n            editorState={this.state.editorState}\r\n            onEditorStateChange={this.onEditorStateChange.bind(this)}\r\n            placeholder=\"content\"\r\n            toolbar={{\r\n              options: [\r\n                \"blockType\",\r\n                \"fontSize\",\r\n                \"inline\",\r\n                \"list\",\r\n                \"textAlign\",\r\n                \"history\",\r\n                \"image\",\r\n              ],\r\n              list: { inDropdown: true },\r\n              textAlign: { inDropdown: false },\r\n              link: { inDropdown: true },\r\n              history: { inDropdown: false },\r\n              image: {\r\n                uploadCallback: uploadImageCallBack,\r\n                alt: { present: true, mandatory: true },\r\n              },\r\n            }}\r\n            wrapperClassName=\"wrapper_class\"\r\n            editorClassName=\"editor_class\"\r\n            toolbarClassName=\"toolbar_class\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContentEditor;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}